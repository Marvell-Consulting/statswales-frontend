services:
  valkey:
    image: valkey/valkey:latest
    ports:
      - '6380:6379'

  db:
    image: postgres:17
    ports:
      - '3002:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: statswales-backend-test

  blobstorage:
    image: mcr.microsoft.com/azure-storage/azurite
    # command: azurite --blobHost 0.0.0.0 --queueHost 0.0.0.0 --tableHost 0.0.0.0 --debug=/tmp/debug.log
    ports:
      - '10000:10000'
      - '10001:10001'
      - '10002:10002'

  backend:
    image: ghcr.io/marvell-consulting/statswales-backend:latest
    pull_policy: always
    ports:
      - '3001:3001'
    depends_on:
      - valkey
      - db
      - blobstorage
    healthcheck:
      test: curl --fail http://localhost:3001/healthcheck || exit 1
      interval: 40s
      timeout: 30s
      retries: 5
      start_period: 60s

    environment:
      APP_ENV: 'ci'
      LOG_LEVEL: 'debug'
      TEST_DB_HOST: 'db'
      TEST_DB_PORT: 5432
      TEST_DB_SYNC: 'false'
      AZURE_BLOB_STORAGE_URL: http://blobstorage:10000/devstoreaccount1
      AZURE_DATALAKE_STORAGE_ACCOUNT_NAME: ${AZURE_DATALAKE_STORAGE_ACCOUNT_NAME}
      AZURE_DATALAKE_STORAGE_ACCOUNT_KEY: ${AZURE_DATALAKE_STORAGE_ACCOUNT_KEY}
      AZURE_DATALAKE_STORAGE_FILESYSTEM_NAME: ${AZURE_DATALAKE_STORAGE_FILESYSTEM_NAME}

    command: sh -c "npm run migration:run && npm run seed:required && npm run seed:ci && npm run seed:dataset && npm run start"

  ready-for-tests:
    image: busybox
    command: echo "ready for tests"
    depends_on:
      backend:
        condition: service_healthy
