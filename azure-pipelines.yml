# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '17615c2d-e115-4122-9753-a0c542653d28'
  imageRepository: 'statswales-frontend'
  containerRegistry: 'statswalesregistry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        containerRegistry: '$(dockerRegistryServiceConnection)'
        repository: '$(imageRepository)'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: '$(tag)'
    - task: AzureContainerApps@1
      inputs:
        azureSubscription: 'Marvell Consulting(3f7a282e-96dc-4706-9b9e-65609c29b2c8)'
        acrName: 'StatsWalesRegistry'
        acrUsername: 'StatsWalesRegistry'
        acrPassword: '$(acr_password)'
        dockerfilePath: 'Dockerfile'
        resourceGroup: 'statswales-container-app-rg'
        containerAppName: 'statswales-develop-frontend'
        containerAppEnvironment: 'statswales-container-app-environment'
        targetPort: '3000'
        ingress: 'external'
        imageToDeploy: '$(containerRegistry)/$(imageRepository):$(tag)'
        environmentVariables: 'BACKEND_SERVER=$(backend_server) BACKEND_PORT=$(backend_port) BACKEND_PROTOCOL=$(backend_protocol)'